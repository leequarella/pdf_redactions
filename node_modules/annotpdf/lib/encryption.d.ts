export declare class Encryption {
    static PADDING_STRING: number[];
    computeEncryptionKey(password: string | Uint8Array): Uint8Array;
    convertInt32ArrayToUint8Array(a: Int32Array): Uint8Array;
    convertUint8ArrayToInt32Array(a: Uint8Array): Int32Array;
    computeOwnerPassword(password: string | Uint8Array): Uint8Array;
    computeOwnerPassword_2(password: string | Uint8Array): Uint8Array;
    padPasswortString(password: Uint8Array): Uint8Array;
    getRC4Key(): any;
    computeUserPassword(password: string | Uint8Array): Uint8Array;
    computeUserPassword_3(password: string, _o_entry: string, permission: number, file_id_string: string): Uint8Array;
    computeUserPassword_2(password: string | Uint8Array): Uint8Array;
    getRC4Key_2(password: string, _o_entry: string, permission: number, file_id_string: string): any;
    decrypt(value: Uint8Array, object_number: number, generation: number, key: Uint8Array): void;
    decrypt_2(value: Uint8Array, object_number: number, generation: number, key: Uint8Array): void;
    testEncryption(_key: string, _data: string): string;
}
